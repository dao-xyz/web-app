{"version":3,"sources":["components/Channel/Channel.tsx","pages/Home/Home.tsx","logo.png","components/ThemeToggle.tsx","components/Header.tsx","App.tsx","styles/theme.ts","reportWebVitals.ts","index.tsx"],"names":["Channels","Box","Toolbar","sx","justifyContent","Typography","variant","component","IconButton","size","edge","color","aria-label","List","map","channel","ListItem","button","ListItemText","primary","name","Home","display","Drawer","width","flexShrink","boxSizing","overflow","Channel","flexGrow","p","paragraph","ThemeToggle","theme","useTheme","colorMode","React","ColorModeContext","ml","mr","onClick","toggleColorMode","palette","mode","settings","Header","anchorElNav","setAnchorElNav","anchorElUser","setAnchorElUser","handleCloseNavMenu","navigateToSourcCode","window","location","href","AppBar","position","zIndex","drawer","Container","maxWidth","disableGutters","noWrap","xs","md","src","logo","className","alt","aria-controls","aria-haspopup","event","currentTarget","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","MenuItem","Button","my","Tooltip","title","Avatar","mt","setting","textAlign","createContext","App","useState","setMode","useMemo","prevMode","createTheme","blue","divider","text","grey","secondary","lightBlue","background","getDesignTokens","Provider","value","ThemeProvider","CssBaseline","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.112c4d33.chunk.js","sourcesContent":["import {\n  Box,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Toolbar,\n  Typography,\n} from \"@mui/material\";\nimport React from \"react\";\nimport IconButton from \"@mui/material/IconButton\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { ChannelAccount } from \"@solvei/solvei-client/schema\";\nimport { PublicKey } from \"@solana/web3.js\";\n\nconst STATIC_CHANNEL_NAMES = [\"Explore channels\", \"All\"];\n\nconst listChannels = (): ChannelAccount[] => []; /* [\n    { name: 'All', tail_message: PublicKey.default },\n    { name: \"Explore channels\", tail_message: PublicKey.default },\n] */\nexport function Channels() {\n  const createChannel = () => {};\n  return (\n    <Box>\n      <Box>\n        <Toolbar sx={{ justifyContent: \"space-between\" }}>\n          <Typography variant=\"h6\" component=\"div\" sx={{}}>\n            Channels\n          </Typography>\n          <IconButton size=\"large\" edge=\"end\" color=\"inherit\" aria-label=\"menu\">\n            <AddIcon />\n          </IconButton>\n        </Toolbar>\n      </Box>\n      <List>\n        {listChannels().map((channel) => (\n          <ListItem button key={channel.name}>\n            <ListItemText primary={channel.name} />\n          </ListItem>\n        ))}\n      </List>\n    </Box>\n  );\n}\n\nexport default Channels;\n","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Drawer from \"@mui/material/Drawer\";\nimport AppBar from \"@mui/material/AppBar\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport List from \"@mui/material/List\";\nimport Typography from \"@mui/material/Typography\";\nimport Divider from \"@mui/material/Divider\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport InboxIcon from \"@mui/icons-material/MoveToInbox\";\nimport MailIcon from \"@mui/icons-material/Mail\";\nimport Channels from \"../../components/Channel/Channel\";\nconst drawerWidth = 240;\n\nexport function Home() {\n  return (\n    <Box sx={{ display: \"flex\" }}>\n      <Drawer\n        variant=\"permanent\"\n        sx={{\n          width: drawerWidth,\n          flexShrink: 0,\n          [`& .MuiDrawer-paper`]: {\n            width: drawerWidth,\n            boxSizing: \"border-box\",\n          },\n        }}\n      >\n        <Toolbar />\n        <Box sx={{ overflow: \"auto\" }}>\n          <Channels />\n        </Box>\n      </Drawer>\n      <Box component=\"main\" sx={{ flexGrow: 1, p: 3 }}>\n        <Toolbar />\n        <Typography paragraph>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Rhoncus\n          dolor purus non enim praesent elementum facilisis leo vel. Risus at\n          ultrices mi tempus imperdiet. Semper risus in hendrerit gravida rutrum\n          quisque non tellus. Convallis convallis tellus id interdum velit\n          laoreet id donec ultrices. Odio morbi quis commodo odio aenean sed\n          adipiscing. Amet nisl suscipit adipiscing bibendum est ultricies\n          integer quis. Cursus euismod quis viverra nibh cras. Metus vulputate\n          eu scelerisque felis imperdiet proin fermentum leo. Mauris commodo\n          quis imperdiet massa tincidunt. Cras tincidunt lobortis feugiat\n          vivamus at augue. At augue eget arcu dictum varius duis at consectetur\n          lorem. Velit sed ullamcorper morbi tincidunt. Lorem donec massa sapien\n          faucibus et molestie ac.\n        </Typography>\n        <Typography paragraph>\n          Consequat mauris nunc congue nisi vitae suscipit. Fringilla est\n          ullamcorper eget nulla facilisi etiam dignissim diam. Pulvinar\n          elementum integer enim neque volutpat ac tincidunt. Ornare suspendisse\n          sed nisi lacus sed viverra tellus. Purus sit amet volutpat consequat\n          mauris. Elementum eu facilisis sed odio morbi. Euismod lacinia at quis\n          risus sed vulputate odio. Morbi tincidunt ornare massa eget egestas\n          purus viverra accumsan in. In hendrerit gravida rutrum quisque non\n          tellus orci ac. Pellentesque nec nam aliquam sem et tortor. Habitant\n          morbi tristique senectus et. Adipiscing elit duis tristique\n          sollicitudin nibh sit. Ornare aenean euismod elementum nisi quis\n          eleifend. Commodo viverra maecenas accumsan lacus vel facilisis. Nulla\n          posuere sollicitudin aliquam ultrices sagittis orci a.\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n\nexport default Home;\n\n/**\n * PaperProps={{ style: { position: 'absolute' } }}\n                BackdropProps={{ style: { position: 'absolute' } }}\n                ModalProps={{\n                    container: document.getElementById('drawer-container'),\n                    style: { position: 'absolute'}\n                }}\n */\n","export default __webpack_public_path__ + \"static/media/logo.f80ec3e8.png\";","import * as React from \"react\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Box from \"@mui/material/Box\";\nimport { useTheme, ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport { ColorModeContext } from \"../App\";\nimport Brightness4Icon from \"@mui/icons-material/Brightness4\";\nimport Brightness7Icon from \"@mui/icons-material/Brightness7\";\nexport default function ThemeToggle() {\n  const theme = useTheme();\n  const colorMode = React.useContext(ColorModeContext);\n  return (\n    <Box>\n      <IconButton\n        sx={{ ml: 1, mr: 1 }}\n        onClick={colorMode.toggleColorMode}\n        color=\"inherit\"\n      >\n        {theme.palette.mode === \"dark\" ? (\n          <Brightness7Icon />\n        ) : (\n          <Brightness4Icon />\n        )}\n      </IconButton>\n    </Box>\n  );\n}\n","import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Container from \"@mui/material/Container\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Link from \"@mui/material/Link\";\nimport logo from \"./../logo.png\";\nimport { ColorModeContext } from \"../App\";\nimport ThemeToggle from \"./ThemeToggle\";\n\nconst settings = [\"Profile\", \"Account\", \"Dashboard\", \"Logout\"];\n\nconst Header = () => {\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n  const handleOpenNavMenu = (event: any) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = (event: any) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  const navigateToSourcCode = () => {\n    window.location.href = \"https://github.com/the-solvei\";\n  };\n\n  const colorMode = React.useContext(ColorModeContext);\n\n  return (\n    <AppBar\n      position=\"fixed\"\n      sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }}\n    >\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters variant=\"dense\">\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ mr: 2, display: { xs: \"none\", md: \"flex\" } }}\n          >\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          </Typography>\n\n          <Box sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleOpenNavMenu}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorElNav}\n              anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"left\",\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"left\",\n              }}\n              open={Boolean(anchorElNav)}\n              onClose={handleCloseNavMenu}\n              sx={{\n                display: { xs: \"block\", md: \"none\" },\n              }}\n            >\n              <MenuItem key=\"github\" onClick={navigateToSourcCode}>\n                <Typography color=\"inherit\">Source code</Typography>\n              </MenuItem>\n            </Menu>\n          </Box>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}\n          ></Typography>\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }}>\n            <Button\n              key=\"github\"\n              onClick={navigateToSourcCode}\n              sx={{ my: 2, color: \"white\", display: \"block\" }}\n            >\n              Source code\n            </Button>\n          </Box>\n          <ThemeToggle />\n          <Box sx={{ flexGrow: 0 }}>\n            <Tooltip title=\"Open settings\">\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n                <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/2.jpg\" />\n              </IconButton>\n            </Tooltip>\n            <Menu\n              sx={{ mt: \"45px\" }}\n              id=\"menu-appbar\"\n              anchorEl={anchorElUser}\n              anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              open={Boolean(anchorElUser)}\n              onClose={handleCloseUserMenu}\n            >\n              {settings.map((setting) => (\n                <MenuItem key={setting} onClick={handleCloseNavMenu}>\n                  <Typography textAlign=\"center\">{setting}</Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\nexport default Header;\n","import React, { useState } from \"react\";\nimport logo from \"./logo.png\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { Home } from \"./pages/Home/Home\";\nimport {\n  createTheme,\n  CssBaseline,\n  Divider,\n  Drawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  PaletteMode,\n  ThemeProvider,\n} from \"@mui/material\";\nimport { getDesignTokens } from \"./styles/theme\";\nimport Box from \"@mui/material/Box\";\nimport Header from \"./components/Header\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport InboxIcon from \"@mui/icons-material/MoveToInbox\";\nimport MailIcon from \"@mui/icons-material/Mail\";\nexport const ColorModeContext = React.createContext({\n  toggleColorMode: () => {}, // For some reason this should just be like this\n});\nconst drawerWidth = 250;\n\nfunction App() {\n  const [mode, setMode] = React.useState<PaletteMode>(\"dark\");\n  const colorMode = React.useMemo(\n    () => ({\n      // The dark mode switch would invoke this method\n      toggleColorMode: () => {\n        setMode((prevMode: PaletteMode) =>\n          prevMode === \"light\" ? \"dark\" : \"light\"\n        );\n      },\n    }),\n    []\n  );\n\n  // Update the theme only if the mode changes\n  const theme = React.useMemo(() => createTheme(getDesignTokens(mode)), [mode]);\n\n  //const [theme, setTheme] = useState(lightTheme);\n\n  return (\n    <div className=\"App\">\n      <ColorModeContext.Provider value={colorMode}>\n        <ThemeProvider theme={theme}>\n          <Box sx={{ display: \"flex\" }}>\n            <CssBaseline>\n              {/* <Header/>\n              \n              <Button onClick={toggleTheme} variant=\"contained\" color=\"primary\">Toggle theme</Button>\n              <h1>It's a light theme!</h1> */}\n\n              <Header />\n              <Router>\n                <Routes>\n                  <Route path=\"/\" element={<Home />} />\n                </Routes>\n              </Router>\n            </CssBaseline>\n          </Box>\n        </ThemeProvider>\n      </ColorModeContext.Provider>\n    </div>\n  );\n}\nexport default App;\n","/* export const lightTheme: ThemeInterface = {\n    body: '#E2E2E2',\n    text: '#363537',\n    toggleBorder: '#FFF',\n    gradient: 'linear-gradient(#39598A, #79D7ED)',\n}\n  \nexport const darkTheme: ThemeInterface = {\n    body: '#363537',\n    text: '#FAFAFA',\n    toggleBorder: '#6B8096',\n    gradient: 'linear-gradient(#091236, #1E215D)',\n}\n\n\nexport  interface ThemeInterface {\n    body: string,\n    text: string,\n    toggleBorder: string,\n    gradient: string,\n} */\n\nimport { createTheme, PaletteMode } from \"@mui/material\";\nimport { amber, blue, deepOrange, grey, lightBlue } from \"@mui/material/colors\";\n\ndeclare module \"@mui/material/styles\" {\n  interface Theme {\n    status: {\n      danger: string;\n    };\n  }\n  // allow configuration using `createTheme`\n  interface ThemeOptions {\n    status?: {\n      danger?: string;\n    };\n  }\n}\n\nexport const getDesignTokens = (mode: PaletteMode) => ({\n  palette: {\n    mode,\n    ...(mode === \"light\"\n      ? {\n          // palette values for light mode\n          primary: blue,\n          divider: blue[200],\n          text: {\n            primary: grey[900],\n            secondary: grey[800],\n          },\n        }\n      : {\n          // palette values for dark mode\n          primary: lightBlue,\n          divider: lightBlue[200],\n          background: {\n            //default: deepOrange[900],\n            //paper: deepOrange[900],\n          },\n          text: {\n            primary: grey[100],\n            secondary: grey[500],\n          },\n        }),\n  },\n});\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}