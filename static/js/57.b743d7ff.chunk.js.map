{"version":3,"file":"static/js/57.b743d7ff.chunk.js","mappings":"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","sources":["../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/src/util/to-buffer.ts","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/node_modules/minimalistic-assert/index.js","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/node_modules/inherits/inherits_browser.js","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/node_modules/hash.js/lib/hash/utils.js","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/node_modules/hash.js/lib/hash/common.js","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/node_modules/hash.js/lib/hash/sha/common.js","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/node_modules/hash.js/lib/hash/sha/1.js","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/node_modules/hash.js/lib/hash/sha/256.js","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/node_modules/hash.js/lib/hash/sha/224.js","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/node_modules/hash.js/lib/hash/sha/512.js","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/node_modules/hash.js/lib/hash/sha/384.js","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/node_modules/hash.js/lib/hash/sha.js","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/node_modules/hash.js/lib/hash/ripemd.js","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/node_modules/hash.js/lib/hash/hmac.js","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/node_modules/hash.js/lib/hash.js","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/node_modules/@ethersproject/logger/lib.esm/index.js","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/node_modules/@ethersproject/logger/lib.esm/_version.js","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/node_modules/@ethersproject/bytes/lib.esm/_version.js","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/node_modules/@ethersproject/bytes/lib.esm/index.js","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/node_modules/@ethersproject/sha2/lib.esm/sha2.js","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/node_modules/@ethersproject/sha2/lib.esm/_version.js","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/src/util/borsh-schema.ts","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/src/publickey.ts","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/src/bpf-loader-deprecated.ts","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/src/layout.ts","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/src/util/shortvec-encoding.ts","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/src/message.ts","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/src/util/assert.ts","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/src/transaction.ts","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/src/sysvar.ts","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/src/util/send-and-confirm-transaction.ts","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/src/util/sleep.ts","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/src/instruction.ts","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/src/fee-calculator.ts","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/src/nonce-account.ts","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/src/system-program.ts","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/src/loader.ts","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/src/bpf-loader.ts","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/node_modules/cross-fetch/dist/browser-ponyfill.js","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/src/errors.ts","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/src/connection.ts","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/src/keypair.ts","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/src/ed25519-program.ts","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/src/stake-program.ts","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/src/secp256k1-program.ts","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/src/validator-info.ts","../node_modules/@solana/wallet-adapter-sollet/node_modules/@solana/web3.js/src/vote-account.ts","../node_modules/@solana/wallet-adapter-sollet/node_modules/@project-serum/sol-wallet-adapter/src/index.ts","../node_modules/@solana/wallet-adapter-sollet/node_modules/bn.js/lib/bn.js","../node_modules/@solana/wallet-adapter-sollet/node_modules/buffer/index.js"],"sourcesContent":["import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","\"use strict\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n})(ErrorCode || (ErrorCode = {}));\n;\nconst HEX = \"0123456789abcdef\";\nexport class Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                        hex += HEX[value[i] >> 4];\n                        hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                }\n                else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n//# sourceMappingURL=index.js.map","export const version = \"logger/5.5.0\";\n//# sourceMappingURL=_version.js.map","export const version = \"bytes/5.5.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nfunction isHexable(value) {\n    return !!(value.toHexString);\n}\nfunction addSlice(array) {\n    if (array.slice) {\n        return array;\n    }\n    array.slice = function () {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\nexport function isBytesLike(value) {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\nfunction isInteger(value) {\n    return (typeof (value) === \"number\" && value == value && (value % 1) === 0);\n}\nexport function isBytes(value) {\n    if (value == null) {\n        return false;\n    }\n    if (value.constructor === Uint8Array) {\n        return true;\n    }\n    if (typeof (value) === \"string\") {\n        return false;\n    }\n    if (!isInteger(value.length) || value.length < 0) {\n        return false;\n    }\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function arrayify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) {\n            result.push(0);\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        value = value.toHexString();\n    }\n    if (isHexString(value)) {\n        let hex = value.substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0x0\" + hex.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\nexport function concat(items) {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n    const result = new Uint8Array(length);\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n    return addSlice(result);\n}\nexport function stripZeros(value) {\n    let result = arrayify(value);\n    if (result.length === 0) {\n        return result;\n    }\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) {\n        start++;\n    }\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n    return result;\n}\nexport function zeroPad(value, length) {\n    value = arrayify(value);\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\nexport function isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\nconst HexCharacters = \"0123456789abcdef\";\nexport function hexlify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n        if (hex.length) {\n            if (hex.length % 2) {\n                hex = \"0\" + hex;\n            }\n            return \"0x\" + hex;\n        }\n        return \"0x00\";\n    }\n    if (typeof (value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) {\n            return (\"0x0\" + value);\n        }\n        return \"0x\" + value;\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        return value.toHexString();\n    }\n    if (isHexString(value)) {\n        if (value.length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + value.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                value += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return value.toLowerCase();\n    }\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            let v = value[i];\n            result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n    return (data.length - 2) / 2;\n}\nexport function hexDataSlice(data, offset, endOffset) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n    }\n    offset = 2 + 2 * offset;\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n    return \"0x\" + data.substring(offset);\n}\nexport function hexConcat(items) {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\nexport function hexValue(value) {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") {\n        return \"0x0\";\n    }\n    return trimmed;\n}\nexport function hexStripZeros(value) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") {\n        offset++;\n    }\n    return \"0x\" + value.substring(offset);\n}\nexport function hexZeroPad(value, length) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    return value;\n}\nexport function splitSignature(signature) {\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0\n    };\n    if (isBytesLike(signature)) {\n        const bytes = arrayify(signature);\n        if (bytes.length !== 65) {\n            logger.throwArgumentError(\"invalid signature string; must be 65 bytes\", \"signature\", signature);\n        }\n        // Get the r, s and v\n        result.r = hexlify(bytes.slice(0, 32));\n        result.s = hexlify(bytes.slice(32, 64));\n        result.v = bytes[64];\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            }\n            else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) {\n            bytes[32] |= 0x80;\n        }\n        result._vs = hexlify(bytes.slice(32, 64));\n    }\n    else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1 : 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            }\n            else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            }\n            else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            }\n            else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            }\n            else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        }\n        else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            }\n            else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v : (1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        }\n        else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        }\n        else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) {\n            vs[0] |= 0x80;\n        }\n        const _vs = hexlify(vs);\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        }\n        else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n    return result;\n}\nexport function joinSignature(signature) {\n    signature = splitSignature(signature);\n    return hexlify(concat([\n        signature.r,\n        signature.s,\n        (signature.recoveryParam ? \"0x1c\" : \"0x1b\")\n    ]));\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { SupportedAlgorithm } from \"./types\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport function ripemd160(data) {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha256(data) {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha512(data) {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\nexport function computeHmac(algorithm, key, data) {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n    return \"0x\" + hash.hmac(hash[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n//# sourceMappingURL=sha2.js.map","export const version = \"sha2/5.5.0\";\n//# sourceMappingURL=_version.js.map","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport nacl from 'tweetnacl';\nimport {sha256} from '@ethersproject/sha2';\n\nimport {Struct, SOLANA_SCHEMA} from './util/borsh-schema';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Buffer\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != 32) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > 32) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Default public key value. (All zeros)\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key\n   */\n  toBytes(): Uint8Array {\n    return this.toBuffer();\n  }\n\n  /**\n   * Return the Buffer representation of the public key\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === 32) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const hash = sha256(new Uint8Array(buffer)).slice(2);\n    return new PublicKey(Buffer.from(hash, 'hex'));\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    let hash = sha256(new Uint8Array(buffer)).slice(2);\n    let publicKeyBytes = new BN(hash, 16).toArray(undefined, 32);\n    if (is_on_curve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = await this.createProgramAddress(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkey: Uint8Array): boolean {\n    return is_on_curve(pubkey) == 1;\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n\n// @ts-ignore\nlet naclLowLevel = nacl.lowlevel;\n\n// Check that a pubkey is on the curve.\n// This function and its dependents were sourced from:\n// https://github.com/dchest/tweetnacl-js/blob/f1ec050ceae0861f34280e62498b1d3ed9c350c6/nacl.js#L792\nfunction is_on_curve(p: any) {\n  var r = [\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n  ];\n\n  var t = naclLowLevel.gf(),\n    chk = naclLowLevel.gf(),\n    num = naclLowLevel.gf(),\n    den = naclLowLevel.gf(),\n    den2 = naclLowLevel.gf(),\n    den4 = naclLowLevel.gf(),\n    den6 = naclLowLevel.gf();\n\n  naclLowLevel.set25519(r[2], gf1);\n  naclLowLevel.unpack25519(r[1], p);\n  naclLowLevel.S(num, r[1]);\n  naclLowLevel.M(den, num, naclLowLevel.D);\n  naclLowLevel.Z(num, num, r[2]);\n  naclLowLevel.A(den, r[2], den);\n\n  naclLowLevel.S(den2, den);\n  naclLowLevel.S(den4, den2);\n  naclLowLevel.M(den6, den4, den2);\n  naclLowLevel.M(t, den6, num);\n  naclLowLevel.M(t, t, den);\n\n  naclLowLevel.pow2523(t, t);\n  naclLowLevel.M(t, t, num);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(r[0], t, den);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) naclLowLevel.M(r[0], r[0], I);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) return 0;\n  return 1;\n}\nlet gf1 = naclLowLevel.gf([1]);\nlet I = naclLowLevel.gf([\n  0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7,\n  0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83,\n]);\nfunction neq25519(a: any, b: any) {\n  var c = new Uint8Array(32),\n    d = new Uint8Array(32);\n  naclLowLevel.pack25519(c, a);\n  naclLowLevel.pack25519(d, b);\n  return naclLowLevel.crypto_verify_32(c, 0, d, 0);\n}\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (\n  property: string = 'publicKey',\n): BufferLayout.Layout => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64'): BufferLayout.Layout => {\n  return BufferLayout.blob(8, property);\n};\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (property: string = 'string') => {\n  const rsl = BufferLayout.struct(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  rsl.decode = (buffer: any, offset: any) => {\n    const data = _decode(buffer, offset);\n    return data['chars'].toString('utf8');\n  };\n\n  rsl.encode = (str: any, buffer: any, offset: any) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, buffer, offset);\n  };\n\n  (rsl as any).alloc = (str: any) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rsl;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct(\n    [publicKey('staker'), publicKey('withdrawer')],\n    property,\n  );\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    if (item.span >= 0) {\n      alloc += item.span;\n    } else if (typeof item.alloc === 'function') {\n      alloc += item.alloc(fields[item.property]);\n    }\n  });\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PACKET_DATA_SIZE} from './transaction';\nimport * as shortvec from './util/shortvec-encoding';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * The message header, identifying signed and read-only account\n */\nexport type MessageHeader = {\n  /**\n   * The number of signatures required for this message to be considered valid. The\n   * signatures must match the first `numRequiredSignatures` of `accountKeys`.\n   */\n  numRequiredSignatures: number;\n  /** The last `numReadonlySignedAccounts` of the signed keys are read-only accounts */\n  numReadonlySignedAccounts: number;\n  /** The last `numReadonlySignedAccounts` of the unsigned keys are read-only accounts */\n  numReadonlyUnsignedAccounts: number;\n};\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nconst PUBKEY_LENGTH = 32;\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    return (\n      index <\n        this.header.numRequiredSignatures -\n          this.header.numReadonlySignedAccounts ||\n      (index >= this.header.numRequiredSignatures &&\n        index <\n          this.accountKeys.length - this.header.numReadonlyUnsignedAccounts)\n    );\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = bs58.decode(instruction.data);\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: Buffer.from(accounts),\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift() as number;\n    const numReadonlySignedAccounts = byteArray.shift() as number;\n    const numReadonlyUnsignedAccounts = byteArray.shift() as number;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBKEY_LENGTH);\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      accountKeys.push(bs58.encode(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBKEY_LENGTH);\n    byteArray = byteArray.slice(PUBKEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import nacl from 'tweetnacl';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {Message} from './message';\nimport {PublicKey} from './publickey';\nimport * as shortvec from './util/shortvec-encoding';\nimport {toBuffer} from './util/to-buffer';\nimport invariant from './util/assert';\nimport type {Signer} from './keypair';\nimport type {Blockhash} from './blockhash';\nimport type {CompiledInstruction} from './message';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\n/**\n * Default (empty) signature\n *\n * Signatures are 64 bytes in length\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(64).fill(0);\n\n/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nconst SIGNATURE_LENGTH = 64;\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n *\n */\nexport type TransactionCtorFields = {\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash | null;\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(opts?: TransactionCtorFields) {\n    opts && Object.assign(this, opts);\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    const {nonceInfo} = this;\n    if (nonceInfo && this.instructions[0] != nonceInfo.nonceInstruction) {\n      this.recentBlockhash = nonceInfo.nonce;\n      this.instructions.unshift(nonceInfo.nonceInstruction);\n    }\n    const {recentBlockhash} = this;\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (this.instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < this.instructions.length; i++) {\n      if (this.instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    this.instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    accountMetas.sort(function (x, y) {\n      const pubkeySorting = x.pubkey\n        .toBase58()\n        .localeCompare(y.pubkey.toBase58());\n      const checkSigner = x.isSigner === y.isSigner ? 0 : x.isSigner ? -1 : 1;\n      const checkWritable =\n        x.isWritable === y.isWritable ? pubkeySorting : x.isWritable ? -1 : 1;\n      return checkSigner || checkWritable;\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const instructions: CompiledInstruction[] = this.instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    instructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n    this._verifySignatures(message.serialize(), true);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = nacl.sign.detached(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a complete, signed Transaction\n   */\n  verifySignatures(): boolean {\n    return this._verifySignatures(this.serializeMessage(), true);\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(signData: Buffer, requireAllSignatures: boolean): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (\n          !nacl.sign.detached.verify(signData, signature, publicKey.toBuffer())\n        ) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    return transaction;\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  const status = (\n    await connection.confirmTransaction(\n      signature,\n      options && options.commitment,\n    )\n  ).value;\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\n/**\n * @internal\n */\nexport type InstructionType = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData(type: InstructionType, fields?: any): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData(type: InstructionType, buffer: Buffer): any {\n  let data;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct([FeeCalculatorLayout], 'feeCalculator'),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {encodeData, decodeData, InstructionType} from './instruction';\nimport * as Layout from './layout';\nimport {NONCE_ACCOUNT_LENGTH} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(instruction: TransactionInstruction): TransferParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): TransferWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount';\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS: {\n  [type in SystemInstructionType]: InstructionType;\n} = Object.freeze({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('authorized'),\n    ]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('authorized'),\n    ]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: params.lamports,\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: params.lamports});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({pubkey: params.basePubkey, isSigner: true, isWritable: false});\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './util/send-and-confirm-transaction';\nimport {sleep} from './util/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './system-program';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct([BufferLayout.u32('instruction')]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      await sendAndConfirmTransaction(\n        connection,\n        transaction,\n        [payer, program],\n        {\n          commitment: 'confirmed',\n        },\n      );\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a BPF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the BPF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n}({}));\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport fetch from 'cross-fetch';\nimport type {Response} from 'cross-fetch';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport {Client as RpcWebSocketClient} from 'rpc-websockets';\nimport RpcClient from 'jayson/lib/client/browser';\nimport {IWSRequestParams} from 'rpc-websockets/dist/lib/client';\n\nimport {AgentManager} from './agent-manager';\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError} from './errors';\nimport {NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport {MS_PER_SLOT} from './timing';\nimport {Transaction} from './transaction';\nimport {Message} from './message';\nimport assert from './util/assert';\nimport {sleep} from './util/sleep';\nimport {promiseTimeout} from './util/promise-timeout';\nimport {toBuffer} from './util/to-buffer';\nimport {makeWebsocketUrl} from './util/url';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => any;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => any;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n      }),\n    ),\n  ),\n);\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: SimulatedTransactionAccountInfo[] | null;\n  unitsConsumed?: number;\n};\n\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          pick({\n            executable: boolean(),\n            owner: string(),\n            lamports: number(),\n            data: array(string()),\n            rentEpoch: optional(number()),\n          }),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n */\nexport type ParsedConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A confirmed transaction on the ledger\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n */\nexport type ParsedConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A ConfirmedBlock on the ledger\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A ConfirmedBlock on the ledger with signatures only\n */\nexport type ConfirmedBlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  useHttps: boolean,\n  httpHeaders?: HttpHeaders,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n): RpcClient {\n  let agentManager: AgentManager | undefined;\n  if (!process.env.BROWSER) {\n    agentManager = new AgentManager(useHttps);\n  }\n\n  let fetchWithMiddleware:\n    | ((url: string, options: any) => Promise<Response>)\n    | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (url: string, options: any) => {\n      const modifiedFetchArgs = await new Promise<[string, any]>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(url, options, (modifiedUrl, modifiedOptions) =>\n              resolve([modifiedUrl, modifiedOptions]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const agent = agentManager ? agentManager.requestStart() : undefined;\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    } finally {\n      agentManager && agentManager.requestEnd();\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n  }),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(\n      pick({\n        pubkey: PublicKeyFromString,\n        signer: boolean(),\n        writable: boolean(),\n      }),\n    ),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlockSignatures\" message\n */\nconst GetConfirmedBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedTransaction\" message\n */\nconst GetConfirmedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedTransaction\" message\n */\nconst GetParsedConfirmedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n};\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64) */\n  encoding?: 'base64' | 'jsonParsed';\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * @internal\n */\ntype SubscriptionId = 'subscribing' | number;\n\n/**\n * @internal\n */\ntype AccountSubscriptionInfo = {\n  publicKey: string; // PublicKey of the account as a base 58 string\n  callback: AccountChangeCallback;\n  commitment?: Commitment;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * @internal\n */\ntype ProgramAccountSubscriptionInfo = {\n  programId: string; // PublicKey of the program as a base 58 string\n  callback: ProgramAccountChangeCallback;\n  commitment?: Commitment;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n  filters?: GetProgramAccountsFilter[];\n};\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * @internal\n */\ntype SlotSubscriptionInfo = {\n  callback: SlotChangeCallback;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * @private\n */\ntype SlotUpdateSubscriptionInfo = {\n  callback: SlotUpdateCallback;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * @internal\n */\ntype SignatureSubscriptionInfo = {\n  signature: TransactionSignature; // TransactionSignature as a base 58 string\n  callback: SignatureSubscriptionCallback;\n  options?: SignatureSubscriptionOptions;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\ntype RootSubscriptionInfo = {\n  callback: RootChangeCallback;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * @private\n */\ntype LogsSubscriptionInfo = {\n  callback: LogsCallback;\n  filter: LogsFilter;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n  commitment?: Commitment;\n};\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {[header: string]: string};\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  url: string,\n  options: any,\n  fetch: (modifiedUrl: string, modifiedOptions: any) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retring calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    recentBlockhash: Blockhash | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    recentBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ _accountChangeSubscriptionCounter: number = 0;\n  /** @internal */ _accountChangeSubscriptions: {\n    [id: number]: AccountSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _programAccountChangeSubscriptionCounter: number = 0;\n  /** @internal */ _programAccountChangeSubscriptions: {\n    [id: number]: ProgramAccountSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _rootSubscriptionCounter: number = 0;\n  /** @internal */ _rootSubscriptions: {\n    [id: number]: RootSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _signatureSubscriptionCounter: number = 0;\n  /** @internal */ _signatureSubscriptions: {\n    [id: number]: SignatureSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _slotSubscriptionCounter: number = 0;\n  /** @internal */ _slotSubscriptions: {\n    [id: number]: SlotSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _logsSubscriptionCounter: number = 0;\n  /** @internal */ _logsSubscriptions: {\n    [id: number]: LogsSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _slotUpdateSubscriptionCounter: number = 0;\n  /** @internal */ _slotUpdateSubscriptions: {\n    [id: number]: SlotUpdateSubscriptionInfo;\n  } = {};\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let url = new URL(endpoint);\n    const useHttps = url.protocol === 'https:';\n\n    let wsEndpoint;\n    let httpHeaders;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n    }\n\n    this._rpcEndpoint = endpoint;\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      url.toString(),\n      useHttps,\n      httpHeaders,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const args = this._buildArgs([publicKey.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get balance for ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get block time for slot ' + slot + ': ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get minimum ledger slot: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get first available block: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get supply: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new Error('failed to get token supply: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token account balance: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token accounts owned by account ' +\n          ownerAddress.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token accounts owned by account ' +\n          ownerAddress.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get largest accounts: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token largest accounts: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info about account ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info about account ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(publicKey, commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    configOrCommitment?: GetMultipleAccountsConfig | Commitment,\n  ): Promise<(AccountInfo<Buffer | ParsedAccountData> | null)[]> {\n    const keys = publicKeys.map(key => key.toBase58());\n\n    let commitment;\n    let encoding: 'base64' | 'jsonParsed' = 'base64';\n    if (configOrCommitment) {\n      if (typeof configOrCommitment === 'string') {\n        commitment = configOrCommitment;\n        encoding = 'base64';\n      } else {\n        commitment = configOrCommitment.commitment;\n        encoding = configOrCommitment.encoding || 'base64';\n      }\n    }\n\n    const args = this._buildArgs([keys], commitment, encoding);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info for accounts ' + keys + ': ' + res.error.message,\n      );\n    }\n    return res.result.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined,\n      epoch !== undefined ? {epoch} : undefined,\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new Error(\n        `failed to get Stake Activation ${publicKey.toBase58()}: ${\n          res.error.message\n        }`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>> {\n    const extra: Pick<GetProgramAccountsConfig, 'dataSlice' | 'filters'> = {};\n\n    let commitment;\n    let encoding;\n    if (configOrCommitment) {\n      if (typeof configOrCommitment === 'string') {\n        commitment = configOrCommitment;\n      } else {\n        commitment = configOrCommitment.commitment;\n        encoding = configOrCommitment.encoding;\n\n        if (configOrCommitment.dataSlice) {\n          extra.dataSlice = configOrCommitment.dataSlice;\n        }\n        if (configOrCommitment.filters) {\n          extra.filters = configOrCommitment.filters;\n        }\n      }\n    }\n\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      extra,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get accounts owned by program ' +\n          programId.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const extra: Pick<GetParsedProgramAccountsConfig, 'filters'> = {};\n\n    let commitment;\n    if (configOrCommitment) {\n      if (typeof configOrCommitment === 'string') {\n        commitment = configOrCommitment;\n      } else {\n        commitment = configOrCommitment.commitment;\n\n        if (configOrCommitment.filters) {\n          extra.filters = configOrCommitment.filters;\n        }\n      }\n    }\n\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      extra,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get accounts owned by program ' +\n          programId.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Confirm the transaction identified by the specified signature.\n   */\n  async confirmTransaction(\n    signature: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let decodedSignature;\n    try {\n      decodedSignature = bs58.decode(signature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + signature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    const start = Date.now();\n    const subscriptionCommitment = commitment || this.commitment;\n\n    let subscriptionId;\n    let response: RpcResponseAndContext<SignatureResult> | null = null;\n    const confirmPromise = new Promise((resolve, reject) => {\n      try {\n        subscriptionId = this.onSignature(\n          signature,\n          (result: SignatureResult, context: Context) => {\n            subscriptionId = undefined;\n            response = {\n              context,\n              value: result,\n            };\n            resolve(null);\n          },\n          subscriptionCommitment,\n        );\n      } catch (err) {\n        reject(err);\n      }\n    });\n\n    let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n    switch (subscriptionCommitment) {\n      case 'processed':\n      case 'recent':\n      case 'single':\n      case 'confirmed':\n      case 'singleGossip': {\n        timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n        break;\n      }\n      // exhaust enums to ensure full coverage\n      case 'finalized':\n      case 'max':\n      case 'root':\n    }\n\n    try {\n      await promiseTimeout(confirmPromise, timeoutMs);\n    } finally {\n      if (subscriptionId) {\n        this.removeSignatureListener(subscriptionId);\n      }\n    }\n\n    if (response === null) {\n      const duration = (Date.now() - start) / 1000;\n      throw new Error(\n        `Transaction was not confirmed in ${duration.toFixed(\n          2,\n        )} seconds. It is unknown if it succeeded or failed. Check signature ${signature} using the Solana Explorer or CLI tools.`,\n      );\n    }\n\n    return response;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new Error('failed to get cluster nodes: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new Error('failed to get vote accounts: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(commitment?: Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error('failed to get slot: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(commitment?: Commitment): Promise<string> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new Error('failed to get slot leader: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new Error('failed to get slot leaders: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get signature status: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(commitment?: Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error('failed to get transaction count: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get inflation: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitment?: Commitment,\n  ): Promise<(InflationReward | null)[]> {\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined,\n      {\n        epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new Error('failed to get inflation reward: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(commitment?: Commitment): Promise<EpochInfo> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get epoch info: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get epoch schedule: ' + res.error.message);\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get leader schedule: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   */\n  async getRecentBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; feeCalculator: FeeCalculator}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get recent blockhash: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const args = this._buildArgs(limit ? [limit] : []);\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      args,\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get recent performance samples: ' + res.error.message,\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get fee calculator: ' + res.error.message);\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: Message,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const wireMessage = message.serialize().toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new Error('failed to get slot: ' + res.error.message);\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result as unknown as RpcResponseAndContext<number>;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new Error('failed to get version: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new Error('failed to get genesis hash: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  async getBlock(\n    slot: number,\n    opts?: {commitment?: Finality},\n  ): Promise<BlockResponse | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      opts && opts.commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch a processed transaction from the cluster.\n   */\n  async getTransaction(\n    signature: string,\n    opts?: {commitment?: Finality},\n  ): Promise<TransactionResponse | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      opts && opts.commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetConfirmedTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get confirmed transaction: ' + res.error.message,\n      );\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: new Message(result.transaction.message),\n      },\n    };\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const result = await this.getBlock(slot, {commitment});\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    return {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new Error('failed to get blocks: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const result = await this.getTransaction(signature, {commitment});\n    if (!result) return result;\n    const {message, signatures} = result.transaction;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedConfirmedTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get confirmed transaction: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedConfirmedTransactionRpcResult);\n      if ('error' in res) {\n        throw new Error(\n          'failed to get confirmed transactions: ' + res.error.message,\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get confirmed signatures for address: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get signatures for address: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitment,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'airdrop to ' + to.toBase58() + ' failed: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _recentBlockhash(disableCache: boolean): Promise<Blockhash> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.recentBlockhash !== null && !expired) {\n        return this._blockhashInfo.recentBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<Blockhash> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      for (let i = 0; i < 50; i++) {\n        const {blockhash} = await this.getRecentBlockhash('finalized');\n\n        if (this._blockhashInfo.recentBlockhash != blockhash) {\n          this._blockhashInfo = {\n            recentBlockhash: blockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return blockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * Simulate a transaction\n   */\n  async simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      transaction = transactionOrMessage;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n    }\n\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        transaction.recentBlockhash = await this._recentBlockhash(disableCache);\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   */\n  async sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        transaction.recentBlockhash = await this._recentBlockhash(disableCache);\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      this._rpcWebSocket.notify('ping').catch(() => {});\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._resetSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  async _subscribe(\n    sub: {subscriptionId: SubscriptionId | null},\n    rpcMethod: string,\n    rpcArgs: IWSRequestParams,\n  ) {\n    if (sub.subscriptionId == null) {\n      sub.subscriptionId = 'subscribing';\n      try {\n        const id = await this._rpcWebSocket.call(rpcMethod, rpcArgs);\n        if (typeof id === 'number' && sub.subscriptionId === 'subscribing') {\n          // eslint-disable-next-line require-atomic-updates\n          sub.subscriptionId = id;\n        }\n      } catch (err) {\n        if (sub.subscriptionId === 'subscribing') {\n          // eslint-disable-next-line require-atomic-updates\n          sub.subscriptionId = null;\n        }\n        if (err instanceof Error) {\n          console.error(\n            `${rpcMethod} error for argument`,\n            rpcArgs,\n            err.message,\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  async _unsubscribe(\n    sub: {subscriptionId: SubscriptionId | null},\n    rpcMethod: string,\n  ) {\n    const subscriptionId = sub.subscriptionId;\n    if (subscriptionId != null && typeof subscriptionId != 'string') {\n      const unsubscribeId: number = subscriptionId;\n      try {\n        await this._rpcWebSocket.call(rpcMethod, [unsubscribeId]);\n      } catch (err) {\n        if (err instanceof Error) {\n          console.error(`${rpcMethod} error:`, err.message);\n        }\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _resetSubscriptions() {\n    Object.values(this._accountChangeSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._programAccountChangeSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._rootSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._signatureSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._slotSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._slotUpdateSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _updateSubscriptions() {\n    const accountKeys = Object.keys(this._accountChangeSubscriptions).map(\n      Number,\n    );\n    const programKeys = Object.keys(\n      this._programAccountChangeSubscriptions,\n    ).map(Number);\n    const slotKeys = Object.keys(this._slotSubscriptions).map(Number);\n    const slotUpdateKeys = Object.keys(this._slotUpdateSubscriptions).map(\n      Number,\n    );\n    const signatureKeys = Object.keys(this._signatureSubscriptions).map(Number);\n    const rootKeys = Object.keys(this._rootSubscriptions).map(Number);\n    const logsKeys = Object.keys(this._logsSubscriptions).map(Number);\n    if (\n      accountKeys.length === 0 &&\n      programKeys.length === 0 &&\n      slotKeys.length === 0 &&\n      slotUpdateKeys.length === 0 &&\n      signatureKeys.length === 0 &&\n      rootKeys.length === 0 &&\n      logsKeys.length === 0\n    ) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          this._rpcWebSocket.close();\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    for (let id of accountKeys) {\n      const sub = this._accountChangeSubscriptions[id];\n      this._subscribe(\n        sub,\n        'accountSubscribe',\n        this._buildArgs([sub.publicKey], sub.commitment, 'base64'),\n      );\n    }\n\n    for (let id of programKeys) {\n      const sub = this._programAccountChangeSubscriptions[id];\n      this._subscribe(\n        sub,\n        'programSubscribe',\n        this._buildArgs([sub.programId], sub.commitment, 'base64', {\n          filters: sub.filters,\n        }),\n      );\n    }\n\n    for (let id of slotKeys) {\n      const sub = this._slotSubscriptions[id];\n      this._subscribe(sub, 'slotSubscribe', []);\n    }\n\n    for (let id of slotUpdateKeys) {\n      const sub = this._slotUpdateSubscriptions[id];\n      this._subscribe(sub, 'slotsUpdatesSubscribe', []);\n    }\n\n    for (let id of signatureKeys) {\n      const sub = this._signatureSubscriptions[id];\n      const args: any[] = [sub.signature];\n      if (sub.options) args.push(sub.options);\n      this._subscribe(sub, 'signatureSubscribe', args);\n    }\n\n    for (let id of rootKeys) {\n      const sub = this._rootSubscriptions[id];\n      this._subscribe(sub, 'rootSubscribe', []);\n    }\n\n    for (let id of logsKeys) {\n      const sub = this._logsSubscriptions[id];\n      let filter;\n      if (typeof sub.filter === 'object') {\n        filter = {mentions: [sub.filter.toString()]};\n      } else {\n        filter = sub.filter;\n      }\n      this._subscribe(\n        sub,\n        'logsSubscribe',\n        this._buildArgs([filter], sub.commitment),\n      );\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const res = create(notification, AccountNotificationResult);\n    for (const sub of Object.values(this._accountChangeSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result.value, res.result.context);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): number {\n    const id = ++this._accountChangeSubscriptionCounter;\n    this._accountChangeSubscriptions[id] = {\n      publicKey: publicKey.toBase58(),\n      callback,\n      commitment,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeAccountChangeListener(id: number): Promise<void> {\n    if (this._accountChangeSubscriptions[id]) {\n      const subInfo = this._accountChangeSubscriptions[id];\n      delete this._accountChangeSubscriptions[id];\n      await this._unsubscribe(subInfo, 'accountUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown account change id: ${id}`);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const res = create(notification, ProgramAccountNotificationResult);\n    for (const sub of Object.values(this._programAccountChangeSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        const {value, context} = res.result;\n        sub.callback(\n          {\n            accountId: value.pubkey,\n            accountInfo: value.account,\n          },\n          context,\n        );\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): number {\n    const id = ++this._programAccountChangeSubscriptionCounter;\n    this._programAccountChangeSubscriptions[id] = {\n      programId: programId.toBase58(),\n      callback,\n      commitment,\n      subscriptionId: null,\n      filters,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(id: number): Promise<void> {\n    if (this._programAccountChangeSubscriptions[id]) {\n      const subInfo = this._programAccountChangeSubscriptions[id];\n      delete this._programAccountChangeSubscriptions[id];\n      await this._unsubscribe(subInfo, 'programUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown program account change id: ${id}`);\n    }\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): number {\n    const id = ++this._logsSubscriptionCounter;\n    this._logsSubscriptions[id] = {\n      filter,\n      callback,\n      commitment,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id subscription id to deregister.\n   */\n  async removeOnLogsListener(id: number): Promise<void> {\n    if (!this._logsSubscriptions[id]) {\n      throw new Error(`Unknown logs id: ${id}`);\n    }\n    const subInfo = this._logsSubscriptions[id];\n    delete this._logsSubscriptions[id];\n    await this._unsubscribe(subInfo, 'logsUnsubscribe');\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const res = create(notification, LogsNotificationResult);\n    const keys = Object.keys(this._logsSubscriptions).map(Number);\n    for (let id of keys) {\n      const sub = this._logsSubscriptions[id];\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result.value, res.result.context);\n        return;\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const res = create(notification, SlotNotificationResult);\n    for (const sub of Object.values(this._slotSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): number {\n    const id = ++this._slotSubscriptionCounter;\n    this._slotSubscriptions[id] = {\n      callback,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeSlotChangeListener(id: number): Promise<void> {\n    if (this._slotSubscriptions[id]) {\n      const subInfo = this._slotSubscriptions[id];\n      delete this._slotSubscriptions[id];\n      await this._unsubscribe(subInfo, 'slotUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown slot change id: ${id}`);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const res = create(notification, SlotUpdateNotificationResult);\n    for (const sub of Object.values(this._slotUpdateSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): number {\n    const id = ++this._slotUpdateSubscriptionCounter;\n    this._slotUpdateSubscriptions[id] = {\n      callback,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeSlotUpdateListener(id: number): Promise<void> {\n    if (this._slotUpdateSubscriptions[id]) {\n      const subInfo = this._slotUpdateSubscriptions[id];\n      delete this._slotUpdateSubscriptions[id];\n      await this._unsubscribe(subInfo, 'slotsUpdatesUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown slot update id: ${id}`);\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const res = create(notification, SignatureNotificationResult);\n    for (const [id, sub] of Object.entries(this._signatureSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        if (res.result.value === 'receivedSignature') {\n          sub.callback(\n            {\n              type: 'received',\n            },\n            res.result.context,\n          );\n        } else {\n          // Signatures subscriptions are auto-removed by the RPC service so\n          // no need to explicitly send an unsubscribe message\n          delete this._signatureSubscriptions[Number(id)];\n          this._updateSubscriptions();\n          sub.callback(\n            {\n              type: 'status',\n              result: res.result.value,\n            },\n            res.result.context,\n          );\n        }\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): number {\n    const id = ++this._signatureSubscriptionCounter;\n    this._signatureSubscriptions[id] = {\n      signature,\n      callback: (notification, context) => {\n        if (notification.type === 'status') {\n          callback(notification.result, context);\n        }\n      },\n      options: {commitment},\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): number {\n    const id = ++this._signatureSubscriptionCounter;\n    this._signatureSubscriptions[id] = {\n      signature,\n      callback,\n      options,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeSignatureListener(id: number): Promise<void> {\n    if (this._signatureSubscriptions[id]) {\n      const subInfo = this._signatureSubscriptions[id];\n      delete this._signatureSubscriptions[id];\n      await this._unsubscribe(subInfo, 'signatureUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown signature result id: ${id}`);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const res = create(notification, RootNotificationResult);\n    for (const sub of Object.values(this._rootSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): number {\n    const id = ++this._rootSubscriptionCounter;\n    this._rootSubscriptions[id] = {\n      callback,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeRootChangeListener(id: number): Promise<void> {\n    if (this._rootSubscriptions[id]) {\n      const subInfo = this._rootSubscriptions[id];\n      delete this._rootSubscriptions[id];\n      await this._unsubscribe(subInfo, 'rootUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown root change id: ${id}`);\n    }\n  }\n}\n","import nacl from 'tweetnacl';\n\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    if (keypair) {\n      this._keypair = keypair;\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(nacl.sign.keyPair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    const keypair = nacl.sign.keyPair.fromSecretKey(secretKey);\n    if (!options || !options.skipValidation) {\n      const encoder = new TextEncoder();\n      const signData = encoder.encode('@solana/web3.js-validation-v1');\n      const signature = nacl.sign.detached(signData, keypair.secretKey);\n      if (!nacl.sign.detached.verify(signData, signature, keypair.publicKey)) {\n        throw new Error('provided secretKey is invalid');\n      }\n    }\n    return new Keypair(keypair);\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    return new Keypair(nacl.sign.keyPair.fromSeed(seed));\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey(): Uint8Array {\n    return this._keypair.secretKey;\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport nacl from 'tweetnacl';\n\nimport {Keypair} from './keypair';\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport assert from './util/assert';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        publicKeyOffset,\n        publicKeyInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = nacl.sign.detached(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {encodeData, decodeData, InstructionType} from './instruction';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {SystemProgram} from './system-program';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  | 'AuthorizeWithSeed'\n  | 'Authorize'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Split'\n  | 'Withdraw'\n  | 'Merge';\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS: {\n  [type in StakeInstructionType]: InstructionType;\n} = Object.freeze({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n      Layout.rustString('authoritySeed'),\n      Layout.publicKey('authorityOwner'),\n    ]),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `std::mem::size_of::<StakeState>()`:\n   * https://docs.rs/solana-stake-program/1.4.4/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: authorizedPubkey,\n        newAccountPubkey: splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n\n    return transaction.add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport secp256k1 from 'secp256k1';\nimport sha3 from 'js-sha3';\n\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport assert from './util/assert';\nimport {toBuffer} from './util/to-buffer';\n\nconst {publicKeyCreate, ecdsaSign} = secp256k1;\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(\n        sha3.keccak_256.update(toBuffer(publicKey)).digest(),\n      ).slice(-ETHEREUM_ADDRESS_BYTES);\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(privateKey, false).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(\n        sha3.keccak_256.update(toBuffer(message)).digest(),\n      );\n      const {signature, recid: recoveryId} = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './util/shortvec-encoding';\nimport {PublicKey} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    const PUBKEY_LENGTH = 32;\n\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBKEY_LENGTH));\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './util/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = {\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n};\n\nexport type AuthorizedVoter = {\n  epoch: number;\n  authorizedVoter: PublicKey;\n};\n\nexport type PriorVoter = {\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n};\n\nexport type BlockTimestamp = {\n  slot: number;\n  timetamp: number;\n};\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({epoch, authorizedVoter}: AuthorizedVoter) {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoter) {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({\n  buf,\n  idx,\n  isEmpty,\n}: {\n  buf: PriorVoter[];\n  idx: number;\n  isEmpty: boolean;\n}): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [...buf.slice(idx + 1).map(parsePriorVoters), ...buf.slice(0, idx)];\n}\n","import EventEmitter from 'eventemitter3';\nimport { PublicKey, Transaction } from '@solana/web3.js';\nimport bs58 from 'bs58';\n\ntype InjectedProvider = { postMessage: (params: unknown) => void };\n\nexport default class Wallet extends EventEmitter {\n  private _providerUrl: URL | undefined;\n  private _injectedProvider?: InjectedProvider;\n  private _publicKey: PublicKey | null = null;\n  private _popup: Window | null = null;\n  private _handlerAdded = false;\n  private _nextRequestId = 1;\n  private _autoApprove = false;\n  private _responsePromises: Map<\n    number,\n    [(value: string) => void, (reason: Error) => void]\n  > = new Map();\n\n  constructor(provider: unknown, private _network: string) {\n    super();\n    if (isInjectedProvider(provider)) {\n      this._injectedProvider = provider;\n    } else if (isString(provider)) {\n      this._providerUrl = new URL(provider);\n      this._providerUrl.hash = new URLSearchParams({\n        origin: window.location.origin,\n        network: this._network,\n      }).toString();\n    } else {\n      throw new Error(\n        'provider parameter must be an injected provider or a URL string.',\n      );\n    }\n  }\n\n  handleMessage = (\n    e: MessageEvent<{\n      id: number;\n      method: string;\n      params: {\n        autoApprove: boolean;\n        publicKey: string;\n      };\n      result?: string;\n      error?: string;\n    }>,\n  ): void => {\n    if (\n      (this._injectedProvider && e.source === window) ||\n      (e.origin === this._providerUrl?.origin && e.source === this._popup)\n    ) {\n      if (e.data.method === 'connected') {\n        const newPublicKey = new PublicKey(e.data.params.publicKey);\n        if (!this._publicKey || !this._publicKey.equals(newPublicKey)) {\n          if (this._publicKey && !this._publicKey.equals(newPublicKey)) {\n            this.handleDisconnect();\n          }\n          this._publicKey = newPublicKey;\n          this._autoApprove = !!e.data.params.autoApprove;\n          this.emit('connect', this._publicKey);\n        }\n      } else if (e.data.method === 'disconnected') {\n        this.handleDisconnect();\n      } else if (e.data.result || e.data.error) {\n        const promises = this._responsePromises.get(e.data.id);\n        if (promises) {\n          const [resolve, reject] = promises;\n          if (e.data.result) {\n            resolve(e.data.result);\n          } else {\n            reject(new Error(e.data.error));\n          }\n        }\n      }\n    }\n  };\n\n  private handleConnect() {\n    if (!this._handlerAdded) {\n      this._handlerAdded = true;\n      window.addEventListener('message', this.handleMessage);\n      window.addEventListener('beforeunload', this._beforeUnload);\n    }\n    if (this._injectedProvider) {\n      return new Promise<void>((resolve) => {\n        void this.sendRequest('connect', {});\n        resolve();\n      });\n    } else {\n      window.name = 'parent';\n      this._popup = window.open(\n        this._providerUrl?.toString(),\n        '_blank',\n        'location,resizable,width=460,height=675',\n      );\n      return new Promise((resolve) => {\n        this.once('connect', resolve);\n      });\n    }\n  }\n\n  private handleDisconnect() {\n    if (this._handlerAdded) {\n      this._handlerAdded = false;\n      window.removeEventListener('message', this.handleMessage);\n      window.removeEventListener('beforeunload', this._beforeUnload);\n    }\n    if (this._publicKey) {\n      this._publicKey = null;\n      this.emit('disconnect');\n    }\n    this._responsePromises.forEach(([, reject], id) => {\n      this._responsePromises.delete(id);\n      reject(new Error('Wallet disconnected'));\n    });\n  }\n\n  private async sendRequest(method: string, params: Record<string, unknown>) {\n    if (method !== 'connect' && !this.connected) {\n      throw new Error('Wallet not connected');\n    }\n    const requestId = this._nextRequestId;\n    ++this._nextRequestId;\n    return new Promise((resolve, reject) => {\n      this._responsePromises.set(requestId, [resolve, reject]);\n      if (this._injectedProvider) {\n        this._injectedProvider.postMessage({\n          jsonrpc: '2.0',\n          id: requestId,\n          method,\n          params: {\n            network: this._network,\n            ...params,\n          },\n        });\n      } else {\n        this._popup?.postMessage(\n          {\n            jsonrpc: '2.0',\n            id: requestId,\n            method,\n            params,\n          },\n          this._providerUrl?.origin ?? '',\n        );\n\n        if (!this.autoApprove) {\n          this._popup?.focus();\n        }\n      }\n    });\n  }\n\n  get publicKey(): PublicKey | null {\n    return this._publicKey;\n  }\n\n  get connected(): boolean {\n    return this._publicKey !== null;\n  }\n\n  get autoApprove(): boolean {\n    return this._autoApprove;\n  }\n\n  async connect(): Promise<void> {\n    if (this._popup) {\n      this._popup.close();\n    }\n    await this.handleConnect();\n  }\n\n  async disconnect(): Promise<void> {\n    if (this._injectedProvider) {\n      await this.sendRequest('disconnect', {});\n    }\n    if (this._popup) {\n      this._popup.close();\n    }\n    this.handleDisconnect();\n  }\n\n  private _beforeUnload = (): void => {\n    void this.disconnect();\n  };\n\n  async sign(\n    data: Uint8Array,\n    display: unknown,\n  ): Promise<{\n    signature: Buffer;\n    publicKey: PublicKey;\n  }> {\n    if (!(data instanceof Uint8Array)) {\n      throw new Error('Data must be an instance of Uint8Array');\n    }\n\n    const response = (await this.sendRequest('sign', {\n      data,\n      display,\n    })) as { publicKey: string; signature: string };\n    const signature = bs58.decode(response.signature);\n    const publicKey = new PublicKey(response.publicKey);\n    return {\n      signature,\n      publicKey,\n    };\n  }\n\n  async signTransaction(transaction: Transaction): Promise<Transaction> {\n    const response = (await this.sendRequest('signTransaction', {\n      message: bs58.encode(transaction.serializeMessage()),\n    })) as { publicKey: string; signature: string };\n    const signature = bs58.decode(response.signature);\n    const publicKey = new PublicKey(response.publicKey);\n    transaction.addSignature(publicKey, signature);\n    return transaction;\n  }\n\n  async signAllTransactions(\n    transactions: Transaction[],\n  ): Promise<Transaction[]> {\n    const response = (await this.sendRequest('signAllTransactions', {\n      messages: transactions.map((tx) => bs58.encode(tx.serializeMessage())),\n    })) as { publicKey: string; signatures: string[] };\n    const signatures = response.signatures.map((s) => bs58.decode(s));\n    const publicKey = new PublicKey(response.publicKey);\n    transactions = transactions.map((tx, idx) => {\n      tx.addSignature(publicKey, signatures[idx]);\n      return tx;\n    });\n    return transactions;\n  }\n\n  async diffieHellman(\n    publicKey: Uint8Array,\n  ): Promise<{ publicKey: Uint8Array; secretKey: Uint8Array }> {\n    if (!(publicKey instanceof Uint8Array)) {\n      throw new Error('Data must be an instance of Uint8Array');\n    }\n    const response = (await this.sendRequest('diffieHellman', {\n      publicKey,\n    })) as {\n      publicKey: Uint8Array;\n      secretKey: Uint8Array;\n    };\n    return response;\n  }\n}\n\nfunction isString(a: unknown): a is string {\n  return typeof a === 'string';\n}\n\nfunction isInjectedProvider(a: unknown): a is InjectedProvider {\n  return (\n    isObject(a) && 'postMessage' in a && typeof a.postMessage === 'function'\n  );\n}\n\nfunction isObject(a: unknown): a is Record<string, unknown> {\n  return typeof a === 'object' && a !== null;\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this._strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    var z = 0;\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      var b;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        b = c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n\n      r |= b;\n      z |= b;\n    }\n\n    assert(!(z & 0xf0), 'Invalid character in ' + str);\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n"],"names":["toBuffer","arr","Buffer","assert","val","msg","Error","equal","l","r","Object","create","inherits_browserModule","ctor","superCtor","super_","prototype","constructor","value","enumerable","writable","configurable","TempCtor","require$$0","require$$1","isSurrogatePair","i","charCodeAt","length","htonl","w","zero2","word","zero8","enc","Array","isArray","slice","res","replace","push","parseInt","p","c","toString","endian","start","end","len","k","m","b","a","d","e","buf","pos","ah","al","bh","lo","hi","bl","ch","cl","dh","dl","carry","eh","el","num","utils","BlockHash","this","pending","pendingTotal","blockSize","outSize","hmacStrength","padLength","_delta8","_delta32","update","toArray","concat","join32","_update","digest","_pad","_digest","bytes","t","rotr32","ch32","x","y","z","maj32","p32","s","common","shaCommon","require$$2","rotl32","sum32","sum32_5","ft_1","sha1_K","SHA1","call","h","W","inherits","toHex32","split32","require$$3","sum32_4","s0_256","s1_256","g0_256","g1_256","sha256_K","SHA256","f","g","T1","T2","SHA224","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","sum64","sum64_hi","sum64_lo","sum64_4_hi","sum64_4_lo","sum64_5_hi","sum64_5_lo","sha512_K","SHA512","ch64_hi","xh","xl","yh","yl","zh","ch64_lo","zl","maj64_hi","maj64_lo","s0_512_hi","s0_512_lo","s1_512_hi","s1_512_lo","g0_512_hi","g0_512_lo","g1_512_hi","g1_512_lo","_prepareBlock","c0_hi","c0_lo","c1_hi","c1_lo","c2_hi","c2_lo","c3_hi","c3_lo","fh","fl","gh","gl","hh","hl","c4_hi","c4_lo","T1_hi","T1_lo","T2_hi","T2_lo","SHA384","require$$4","sum32_3","RIPEMD160","j","K","Kh","A","B","C","D","E","Ah","Bh","Ch","Dh","Eh","T","rh","sh","Hmac","hash","key","Hash","inner","outer","_init","exports","sha","ripemd","hmac","sha1","sha256","sha224","sha384","sha512","ripemd160","_permanentCensorErrors","_censorErrors","LogLevels","debug","info","warning","error","off","_logLevel","_globalLogger","LogLevel","ErrorCode","_normalizeError","missing","forEach","form","normalize","join","String","fromCharCode","message","_checkNormalize","HEX","Logger","version","defineProperty","logLevel","args","level","toLowerCase","throwArgumentError","console","log","apply","_log","levels","DEBUG","INFO","WARNING","code","params","makeError","errors","UNKNOWN_ERROR","messageDetails","keys","Uint8Array","hex","JSON","stringify","reason","name","throwError","INVALID_ARGUMENT","argument","condition","UNSUPPORTED_OPERATION","operation","NUMERIC_FAULT","fault","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","target","kind","MISSING_NEW","censorship","permanent","globalLogger","warn","logger","addSlice","array","arguments","isInteger","arrayify","options","checkSafeUint53","result","unshift","allowMissingPrefix","substring","toHexString","isHexable","match","isHexString","hexPad","v","isBytes","data","encode","serialize","SOLANA_SCHEMA","decode","deserialize","decodeUnchecked","deserializeUnchecked","Map","_bn","isPublicKeyData","decoded","bs58","equals","eq","publicKey","toBase58","toJSON","toBytes","toArrayLike","zeroPad","createWithSeed","buffer","fromPublicKey","programId","PublicKey","createProgramAddress","seeds","seed","is_on_curve","publicKeyBytes","findProgramAddress","nonce","seedsWithNonce","address","err","isOnCurve","default","fields","naclLowLevel","nacl","chk","den","den2","den4","den6","neq25519","gf1","I","property","BufferLayout","rustString","rsl","_decode","_encode","chars","str","decodeLength","size","elem","encodeLength","rem_len","header","accountKeys","recentBlockhash","instructions","indexToProgramIds","account","ix","isAccountSigner","index","isAccountWritable","numRequiredSignatures","isProgramId","has","programIds","nonProgramIds","filter","numKeys","keyCount","shortvec","map","instruction","programIdIndex","keyIndicesCount","accounts","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","instructionLayout","signDataLayout","Layout","transaction","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","signData","from","byteArray","accountCount","dataSlice","Message","DEFAULT_SIGNATURE","PACKET_DATA_SIZE","opts","signatures","feePayer","nonceInfo","signature","add","items","item","TransactionInstruction","compileMessage","accountMetas","accountMeta","pubkey","isSigner","isWritable","pubkeySorting","checkSigner","checkWritable","uniqueMetas","pubkeyString","uniqueIndex","feePayerIndex","payerMeta","signedKeys","unsignedKeys","meta","invariant","keyIndex","_compile","every","pair","serializeMessage","setSigners","signers","seen","sign","uniqueSigners","signer","partialSign","_partialSign","addSignature","_addSignature","findIndex","sigpair","verifySignatures","_verifySignatures","requireAllSignatures","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","Transaction","populate","sigPubkeyPair","SYSVAR_CLOCK_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendOptions","skipPreflight","preflightCommitment","commitment","connection","status","sleep","ms","Promise","resolve","setTimeout","encodeData","type","allocLength","alloc","layoutFields","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","span","SYSTEM_INSTRUCTION_LAYOUTS","Create","layout","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","createAccount","lamports","space","transfer","assign","base","createAccountWithSeed","createNonceAccount","SystemProgram","fromPubkey","newAccountPubkey","basePubkey","initParams","noncePubkey","authorizedPubkey","nonceInitialize","authorized","instructionData","nonceAdvance","nonceWithdraw","nonceAuthorize","allocate","CHUNK_SIZE","getMinNumSignatures","Math","Loader","load","balanceNeeded","program","programInfo","accountPubkey","payer","toPubkey","sendAndConfirmTransaction","dataLayout","chunkSize","offset","transactions","global","self","__self__","F","fetch","DOMException","support","Symbol","Blob","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","indexOf","normalizeName","test","TypeError","normalizeValue","iteratorFor","iterator","next","shift","done","undefined","Headers","headers","append","getOwnPropertyNames","consumed","body","bodyUsed","reject","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","view","byteLength","set","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","get","rejected","arrayBuffer","then","text","readAsText","readBlobAsText","readArrayBufferAsText","formData","json","parse","oldValue","hasOwnProperty","callback","thisArg","values","entries","methods","Request","input","url","credentials","method","mode","signal","upcased","toUpperCase","normalizeMethod","referrer","trim","split","decodeURIComponent","parseHeaders","rawHeaders","line","parts","Response","bodyInit","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","stack","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","ponyfill","ctx","module","PublicKeyFromString","coerce","instance","string","RawAccountDataResult","tuple","literal","BufferFromRawAccountData","createRpcResult","union","pick","jsonrpc","id","unknown","optional","any","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","context","slot","number","notificationResultAndContext","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetEpochInfoResult","nullable","epoch","effectiveSlot","amount","postBalance","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","slotsPerEpoch","leaderScheduleSlotOffset","warmup","boolean","firstNormalEpoch","firstNormalSlot","GetLeaderScheduleResult","record","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","logs","executable","owner","rentEpoch","unitsConsumed","total","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","ParsedAccountDataResult","parsed","AccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","ProgramAccountInfoResult","state","active","inactive","memo","blockTime","subscription","SlotInfoResult","parent","root","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","VoteAccountInfoResult","gossip","tpu","rpc","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","commission","lastVote","rootSlot","ConfirmationStatus","current","delinquent","SignatureStatusResponse","confirmations","confirmationStatus","ConfirmedTransactionResult","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","ParsedConfirmedTransactionMetaResult","PerfSampleResult","blockhash","previousBlockhash","parentSlot","rewards","rewardType","feeCalculator","lamportsPerSignature","numTransactions","numSlots","samplePeriodSecs","LogsResult","_keypair","secretKey","generate","Keypair","fromSecretKey","keypair","encoder","fromSeed","ED25519_INSTRUCTION_LAYOUT","createInstructionWithPublicKey","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","Ed25519Program","createInstructionWithPrivateKey","privateKey","STAKE_CONFIG_ID","unixTimestamp","custodian","Lockup","STAKE_INSTRUCTION_LAYOUTS","Initialize","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","Staker","Withdrawer","initialize","lockup","staker","withdrawer","stakePubkey","delegate","authorize","custodianPubkey","newAuthorized","newAuthorizedPubkey","stakeAuthorizationType","authorizeWithSeed","authoritySeed","authorityOwner","merge","withdraw","deactivate","StakeProgram","ecdsaSign","SECP256K1_INSTRUCTION_LAYOUT","publicKeyToEthAddress","sha3","Secp256k1Program","ethAddress","recoveryId","createInstructionWithEthAddress","rawAddress","ethAddressOffset","ethAddressInstructionIndex","pkey","publicKeyCreate","messageHash","recid","website","details","keybaseUsername","Wallet","provider","_network","_publicKey","_popup","_handlerAdded","_nextRequestId","_autoApprove","_responsePromises","handleMessage","_injectedProvider","source","window","origin","_providerUrl","newPublicKey","handleDisconnect","autoApprove","emit","promises","_beforeUnload","disconnect","isObject","postMessage","isString","URL","network","sendRequest","once","delete","connected","requestId","focus","close","handleConnect","display","messages","tx","idx","BN","isBN","negative","words","red","wordSize","require","parseHex","min","parseBase","mul","move","dest","src","max","left","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","_strip","ceil","limbLen","limbPow","mod","imuln","_iaddn","pow","copy","_move","_expand","_normSign","for","inspect","zeros","groupSizes","groupBases","out","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","smallMulTo","ncarry","rword","maxJ","ArrayType","reqLength","allocUnsafe","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","_zeroBits","bitLength","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","mulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","q","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","acc","modn","egcd","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","strip","output","outLen","prev","mod3","one","nOne","lpow","inv","wnd","currentLen","mont","u","base64","ieee754","customInspectSymbol","K_MAX_LENGTH","createBuffer","setPrototypeOf","arg","encodingOrOffset","encoding","isEncoding","actual","write","fromString","arrayView","isInstance","fromArrayBuffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","isBuffer","checked","numberIsNaN","fromObject","toPrimitive","assertSize","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","hexWrite","Number","remaining","strLen","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","base64Write","ucs2Write","units","utf16leToBytes","fromByteArray","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","list","swap16","swap32","swap64","toLocaleString","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","hexSliceLookupTable","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","sym","getMessage","Base","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","floor","ERR_BUFFER_OUT_OF_BOUNDS","received","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","base64clean","dst","alphabet","table","i16","fn","BufferBigIntNotDefined"],"sourceRoot":""}